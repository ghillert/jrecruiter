package org.jrecruiter.model;

// Generated Dec 25, 2006 9:26:52 AM by Hibernate Tools 3.2.0.beta8

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Statistics generated by hbm2java
 */
@Entity
@Table(name = "statistics", uniqueConstraints = {})
public class Statistics implements java.io.Serializable {

	// Fields    

	private int jobId;

	private Jobs jobs;

	private int counter;

	private Date lastAccess;

	private int uniqueVisits;

	// Constructors

	/** default constructor */
	public Statistics() {
	}

	/** full constructor */
	public Statistics(int jobId, Jobs jobs, int counter, Date lastAccess,
			int uniqueVisits) {
		this.jobId = jobId;
		this.jobs = jobs;
		this.counter = counter;
		this.lastAccess = lastAccess;
		this.uniqueVisits = uniqueVisits;
	}

	// Property accessors
	@Id
	@Column(name = "job_id", unique = true, nullable = false, insertable = true, updatable = true)
	public int getJobId() {
		return this.jobId;
	}

	public void setJobId(int jobId) {
		this.jobId = jobId;
	}

	@ManyToOne(cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn(name = "job_id", unique = true, nullable = false, insertable = false, updatable = false)
	public Jobs getJobs() {
		return this.jobs;
	}

	public void setJobs(Jobs jobs) {
		this.jobs = jobs;
	}

	@Column(name = "counter", unique = false, nullable = false, insertable = true, updatable = true)
	public int getCounter() {
		return this.counter;
	}

	public void setCounter(int counter) {
		this.counter = counter;
	}

	@Column(name = "last_access", unique = false, nullable = false, insertable = true, updatable = true, length = 8)
	public Date getLastAccess() {
		return this.lastAccess;
	}

	public void setLastAccess(Date lastAccess) {
		this.lastAccess = lastAccess;
	}

	@Column(name = "unique_visits", unique = false, nullable = false, insertable = true, updatable = true)
	public int getUniqueVisits() {
		return this.uniqueVisits;
	}

	public void setUniqueVisits(int uniqueVisits) {
		this.uniqueVisits = uniqueVisits;
	}

}
