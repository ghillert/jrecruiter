<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:flex="http://www.springframework.org/schema/flex"
    xsi:schemaLocation="http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
                           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
                           http://www.springframework.org/schema/flex    http://www.springframework.org/schema/flex/spring-flex-1.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <tx:annotation-driven/>
    <context:annotation-config />
    <context:component-scan base-package="org.jrecruiter.dao.jpa" />
    <context:component-scan base-package="org.jrecruiter.service.impl" />

    <bean id="server.messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource" >
        <property name="basenames" >
            <list>
                <value>classpath:org/jrecruiter/server/messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="cacheSeconds" value="0"/>
    </bean>

    <bean
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <aop:aspectj-autoproxy />

    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" />

     <bean id="apiKeysHolder" class="org.jrecruiter.common.ApiKeysHolder">
       <property name="googleMapsKey" value="${key.google.maps}"/>
       <property name="reCaptchaKey"  value="${key.recaptcha.public}"/>
     </bean>

     <bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
       <property name="templateLoaderPath"><value>classpath:freemarker/</value></property>
     </bean>

    <bean id="reCaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl">
        <property name="privateKey" value="${key.recaptcha.private}" />
        <property name="publicKey" value="${key.recaptcha.public}" />
        <property name="recaptchaServer" value="http://api.recaptcha.net" />
        <!--
            Or, if you want to use SSL, then use this: <property
            name="recaptchaServer" value="http://secure-api.recaptcha.net" />
        -->
        <property name="includeNoscript" value="false" />
    </bean>

    <bean id="scheduledTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
        <!-- wait 10 seconds before starting repeated execution -->
        <property name="delay" value="10000" />
        <property name="period" value="80000000" />
        <property name="timerTask" ref="updateJobCountPerDays" />
    </bean>

    <bean id="updateJobCountPerDays" class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean">
        <property name="targetObject" ref="jobService" />
        <property name="targetMethod" value="updateJobCountPerDays" />
    </bean>

    <bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
        <property name="scheduledTimerTasks">
            <list>
                <ref bean="scheduledTask"/>
            </list>
        </property>
    </bean>

  <bean id="stringDigester" class="org.jasypt.digest.StandardStringDigester" >
    <property name="algorithm"     value="SHA-512" />
    <property name="iterations"    value="100000" />
    <property name="saltSizeBytes" value="16" />
  </bean>

  <bean id="passwordEncoder" class="org.jasypt.spring.security2.PasswordEncoder">
    <property name="stringDigester">
      <ref bean="stringDigester" />
    </property>
  </bean>

</beans>
