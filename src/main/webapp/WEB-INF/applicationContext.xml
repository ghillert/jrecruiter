<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Root application context for the Countries application.
  - Web-specific beans are defined in "countries-servlet.xml".
  -->
<beans>

  <!--
    - The message source for this context, loaded from localized "messages_xx" files
    - in the classpath, i.e. "/WEB-INF/classes/messages.properties" or
    - "/WEB-INF/classes/messages_fr.properties".
    -
    - "getMessage" calls to this context will use this source.
    - Child contexts can have their own message sources, inheriting all messages from this
    - source, being able to define new messages and override ones defined in this source.
    -
    - We have no need for application messages in this tiny application, so this
    - definition will simply be used by the next level (countries-servlet.xml).
    -->
  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename"><value>messages</value></property>
  </bean>

  <!-- The central service facade of this application -->
  <bean id="userService" class="org.jrecruiter.service.impl.UserService">
    <property name="velocityEngine"><ref bean="velocityEngine"/></property>
    <property name="mailSender"><ref bean="mailSender"/></property>
    <property name="message"><ref bean="mailMessage"/></property>
    <property name="userDao"><ref bean="userDAO"/></property>
    <property name="settingsDao"><ref bean="settingsDAO"/></property>
  </bean>

  <bean id="jobService" class="org.jrecruiter.service.impl.JobService">
    <property name="velocityEngine"><ref bean="velocityEngine"/></property>
    <property name="mailSender"><ref bean="mailSender"/></property>
    <property name="message"><ref bean="mailMessage"/></property>
    <property name="jobsDao"><ref bean="jobsDAO"/></property>
    <property name="settingsDao"><ref bean="settingsDAO"/></property>
  </bean>

  <bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName"><value>java:comp/env/mail/session</value></property>
  </bean>


  <!-- Configure Mail without JNDI
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host"><value>smtp.mailhost.com</value></property>
      <property name="username"><value>user</value></property>
      <property name="password"><value>pw</value></property>
      <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.timeout">15000</prop>
            </props>
        </property>
  </bean>
    -->

  <!-- Configure Mail using JNDI -->
  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="session"><ref bean="mailSession"/></property>
  </bean>

    <!-- Spring JNDI Lookup   -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/postgres</value>
        </property>
    </bean>


  <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage"/>

  <!-- Velocity - Configure Velocity for sending e-mail -->
  <bean id="velocityEngine" singleton="true"
      class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <property name="velocityPropertiesMap">
          <map>
              <entry key="resource.loader"><value>ds</value></entry>
              <entry key="ds.resource.loader.instance">
                  <ref bean="templateLoader"/>
              </entry>
              <entry key="ds.resource.loader.resource.table">
                  <value>configuration</value>
              </entry>
              <entry key="ds.resource.loader.resource.keycolumn">
                  <value>message_key</value>
              </entry>
              <entry key="ds.resource.loader.resource.templatecolumn">
                  <value>message_text</value>
              </entry>
              <entry key="ds.resource.loader.resource.timestampcolumn">
                  <value>last_modified</value>
              </entry>
              <entry key="velocimacro.library">
                  <value></value>
              </entry>
          </map>
      </property>
  </bean>

  <!-- Velocity Database Template Loader -->
  <bean id="templateLoader" singleton="true"
      class="org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader">
      <property name="dataSource"><ref local="dataSource"/></property>
  </bean>

  <!-- When loading the Velocity from the class path use this
  <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <property name="velocityProperties">
          <props>
              <prop key="resource.loader">class</prop>
              <prop key="class.resource.loader.class">
                  org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
              </prop>
          </props>
      </property>
  </bean>
  -->

  <!-- Hibernate -->


  <!--
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close"
    dependency-check="default">
    <property name="driverClassName"><value>org.postgresql.Driver</value></property>
    <property name="url"><value>jdbc:postgresql://localhost/jrecruiter</value></property>
    <property name="username"><value>tomcat</value></property>
    <property name="password"><value>tomcat</value></property>
    </bean>
  -->

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
  dependency-check="default">

  <property name="dataSource"><ref local="dataSource" /></property>

  <property name="mappingResources">
    <list>
      <value>org/jrecruiter/model/Jobs.hbm.xml</value>
      <value>org/jrecruiter/model/User.hbm.xml</value>
      <value>org/jrecruiter/model/UserRole.hbm.xml</value>
      <value>org/jrecruiter/model/Configuration.hbm.xml</value>
      <value>org/jrecruiter/model/Statistics.hbm.xml</value>
    </list>
  </property>


  <property name="hibernateProperties">
    <props>
      <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
      <prop key="hibernate.show_sql">true</prop>
            <prop key="hibernate.max_fetch_depth">2</prop>
            <prop key="hibernate.format_sql">true</prop>
    </props>
  </property>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory"><ref local="sessionFactory" /></property>
  </bean>

  <bean id="jobsDAOTarget" class="org.jrecruiter.persistent.dao.JobsDAOHibernate">
    <property name="sessionFactory"><ref local="sessionFactory" /></property>
        <property name="userDao"><ref local="userDAO" /></property>
    </bean>

    <bean id="jobsDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager" /></property>
        <property name="target"><ref local="jobsDAOTarget" /></property>
        <property name="transactionAttributes">
          <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
        </property>
    </bean>

    <bean id="userDAOTarget" class="org.jrecruiter.persistent.dao.UserDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory" /></property>
    </bean>

    <bean id="userDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager" /></property>
        <property name="target"><ref local="userDAOTarget" /></property>
        <property name="transactionAttributes">
          <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
        </property>
    </bean>

    <bean id="settingsDAOTarget" class="org.jrecruiter.persistent.dao.SettingsDAOHibernate">
    <property name="sessionFactory"><ref local="sessionFactory" /></property>
    </bean>

    <bean id="settingsDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager" /></property>
        <property name="target"><ref local="settingsDAOTarget" /></property>
        <property name="transactionAttributes">
          <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
        </property>
    </bean>

</beans>
