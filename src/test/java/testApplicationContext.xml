<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Root application context for the Countries application.
  - Web-specific beans are defined in "countries-servlet.xml".
  -->
<beans>

  <!--
    - The message source for this context, loaded from localized "messages_xx" files
    - in the classpath, i.e. "/WEB-INF/classes/messages.properties" or
    - "/WEB-INF/classes/messages_fr.properties".
    -
    - "getMessage" calls to this context will use this source.
    - Child contexts can have their own message sources, inheriting all messages from this
    - source, being able to define new messages and override ones defined in this source.
    -
    - We have no need for application messages in this tiny application, so this
    - definition will simply be used by the next level (countries-servlet.xml).
    -->
  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename"><value>messages</value></property>
  </bean>

  <!-- The central service facade of this application -->
  <bean id="userService" class="org.jrecruiter.service.impl.UserService">
    <property name="velocityEngine"><ref bean="velocityEngine"/></property>
    <property name="mailSender"><ref bean="mailSender"/></property>
    <property name="message"><ref bean="mailMessage"/></property>
    <property name="userDao"><ref bean="userDAO"/></property>
  </bean>

  <bean id="jobService" class="org.jrecruiter.service.impl.JobService">
    <property name="velocityEngine"><ref bean="velocityEngine"/></property>
    <property name="mailSender"><ref bean="mailSender"/></property>
    <property name="message"><ref bean="mailMessage"/></property>
    <property name="jobsDao"><ref bean="jobsDAO"/></property>
  </bean>

  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host"><value>localhost</value></property>
      <property name="username"><value></value></property>
      <property name="password"><value></value></property>
      <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">false</prop>
                <prop key="mail.smtp.timeout">15000</prop> <!-- milliseconds -->
            </props>
        </property>
  </bean>

  <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
      <property name="from"><value><![CDATA[AJUG Job Posting Service<postings@jrecruiter.org>]]></value></property>
      <property name="subject"><value>jRecruiter</value></property>
  </bean>

  <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
    <property name="velocityProperties">
        <props>
            <prop key="resource.loader">class</prop>
            <prop key="class.resource.loader.class">
                org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </prop>
        </props>
    </property>
  </bean>


  <!-- Hibernate -->

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close"
    dependency-check="default">
    <property name="driverClassName"><value>org.postgresql.Driver</value></property>
    <property name="url"><value>jdbc:postgresql://localhost/jrecruiter_dev</value></property>
    <property name="username"><value>tomcat</value></property>
    <property name="password"><value>tomcat</value></property>
    </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
  dependency-check="default">

  <property name="dataSource"><ref local="dataSource" /></property>
  <property name="mappingResources">
    <list>
            <value>org/jrecruiter/model/Configuration.hbm.xml</value>
      <value>org/jrecruiter/model/Jobs.hbm.xml</value>
      <value>org/jrecruiter/model/User.hbm.xml</value>
      <value>org/jrecruiter/model/UserRole.hbm.xml</value>
            <value>org/jrecruiter/model/Statistics.hbm.xml</value>

    </list>
  </property>

  <property name="hibernateProperties">
    <props>
            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
            <prop key="hibernate.show_sql">true</prop>
            <prop key="hibernate.max_fetch_depth">2</prop>
            <prop key="hibernate.format_sql">true</prop>
    </props>
  </property>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory"><ref local="sessionFactory" /></property>
  </bean>

  <bean id="jobsDAOTarget" class="org.jrecruiter.persistent.dao.JobsDAOHibernate">
    <property name="sessionFactory"><ref local="sessionFactory" /></property>
        <property name="userDao"><ref local="userDAO" /></property>
    </bean>

    <bean id="jobsDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager" /></property>
        <property name="target"><ref local="jobsDAOTarget" /></property>
        <property name="transactionAttributes">
          <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
        </property>
    </bean>

    <bean id="userDAOTarget" class="org.jrecruiter.persistent.dao.UserDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory" /></property>
    </bean>

    <bean id="userDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager" /></property>
        <property name="target"><ref local="userDAOTarget" /></property>
        <property name="transactionAttributes">
          <props>
          <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
        </property>
    </bean>

    <bean id="settingsDAOTarget" class="org.jrecruiter.persistent.dao.SettingsDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory" /></property>
    </bean>

    <bean id="settingsDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager"><ref local="transactionManager" /></property>
        <property name="target"><ref local="settingsDAOTarget" /></property>
        <property name="transactionAttributes">
            <props>
            <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>


    <!-- ACEGI SECURITY -->
    <bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy">
        <property name="filterInvocationDefinitionSource">
            <value>
            CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
            PATTERN_TYPE_APACHE_ANT
            /**=httpSessionContextIntegrationFilter,remoteUserFilter,authenticationProcessingFilter,securityEnforcementFilter            </value>
        </property>
    </bean>

    <bean id="remoteUserFilter" class="org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter"/>


    <bean id="authenticationManager" class="org.acegisecurity.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref local="daoAuthenticationProvider"/>
            </list>
        </property>
    </bean>

    <bean id="loggerListener" class="org.acegisecurity.event.authentication.LoggerListener"/>

    <bean id="daoAuthenticationProvider" class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
         <property name="userDetailsService" ref="userDAO"/>
         <property name="userCache" ref="userCache"/>
         <property name="passwordEncoder" ref="passwordEncoder"/>
    </bean>

    <bean id="passwordEncoder" class="org.acegisecurity.providers.encoding.ShaPasswordEncoder"/>

    <bean id="userCache" class="org.acegisecurity.providers.dao.cache.EhCacheBasedUserCache">
        <property name="cache">
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </property>
                <property name="cacheName" value="userCache"/>
            </bean>
        </property>
    </bean>

    <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter">
        <property name="rolePrefix" value=""/>
    </bean>

    <bean id="accessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <ref local="roleVoter"/>
            </list>
        </property>
    </bean>

   <bean id="httpSessionContextIntegrationFilter" class="org.acegisecurity.context.HttpSessionContextIntegrationFilter"/>

    <bean id="authenticationProcessingFilter" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureUrl" value="/login.do?status=error"/>
        <property name="defaultTargetUrl" value="/adminMain.do"/>
        <property name="filterProcessesUrl" value="/j_acegi_security_check"/>
    </bean>

    <bean id="securityEnforcementFilter" class="org.acegisecurity.intercept.web.SecurityEnforcementFilter">
        <property name="filterSecurityInterceptor" ref="filterInvocationInterceptor"/>
        <property name="authenticationEntryPoint" ref="authenticationProcessingFilterEntryPoint"/>
    </bean>

    <bean id="authenticationProcessingFilterEntryPoint" class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
        <property name="loginFormUrl" value="/login.do"/>
        <property name="forceHttps" value="false"/>
    </bean>

    <bean id="filterInvocationInterceptor" class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
         <property name="objectDefinitionSource">
            <value>
            CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
            PATTERN_TYPE_APACHE_ANT
            /**adminmain.do**=admin, manager
            /**deletejobposting.do**=admin, manager
            /**openaddjobposting.do**=admin, manager
            /**addjobposting.do**=admin, manager
            /**edituser.do**=admin, manager
            /**userlist.do**=admin
            /**deleteuser.do**=admin
            /**editsettings.do**=admin
            </value>
        </property>
    </bean>
</beans>
