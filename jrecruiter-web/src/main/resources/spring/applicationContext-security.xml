<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

  <security:global-method-security secured-annotations="enabled"/>

  <security:http  auto-config="true" access-decision-manager-ref="accessDecisionManager" >

    <security:intercept-url pattern="/admin/show-users.html**"    access="ADMIN"                          requires-channel="https"/>
    <security:intercept-url pattern="/admin/delete-user.html**"   access="ADMIN"                          requires-channel="https"/>
    <security:intercept-url pattern="/admin/add-user.html**"      access="ADMIN"                          requires-channel="https"/>
    <security:intercept-url pattern="/s/admin/**"                 access="ADMIN"                          requires-channel="https"/>

    <security:intercept-url pattern="/admin/edit-settings.html**" access="ADMIN"                          requires-channel="https"/>
    <security:intercept-url pattern="/admin/search-index.html**"  access="ADMIN"                          requires-channel="https"/>
    <security:intercept-url pattern="/admin/setup-demo.html**"    access="ADMIN"                          requires-channel="https"/>
    <security:intercept-url pattern="/admin/logging.html**"       access="ADMIN"                          requires-channel="https"/>
    <security:intercept-url pattern="/admin/*.html**"             access="MANAGER,ADMIN"                  requires-channel="https"/>

    <security:intercept-url pattern="/login.html**"               access="IS_AUTHENTICATED_ANONYMOUSLY"   requires-channel="https" />
    <security:intercept-url pattern="/fx/**"                      access="IS_AUTHENTICATED_ANONYMOUSLY"   requires-channel="http" />
    <security:intercept-url pattern="/contact.html**"             access="IS_AUTHENTICATED_ANONYMOUSLY"   requires-channel="any" />
    <security:intercept-url pattern="/*.html**"                   access="IS_AUTHENTICATED_ANONYMOUSLY"   requires-channel="any"/>
    <security:intercept-url pattern="/**"                         access="IS_AUTHENTICATED_ANONYMOUSLY"   requires-channel="any" />

    <security:form-login login-page="/login.html" default-target-url="/admin/index.html"
                         authentication-failure-url="/login.html?status=error" />
    <security:logout logout-url="/logout.html" invalidate-session="true" logout-success-url="/show.jobs.html"/>
    <security:session-management>
       <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
    </security:session-management>
    
    <security:custom-filter ref="openIDFilter"                   position="OPENID_FILTER" />
    
  </security:http>

<!-- Custom stuff for openid -->

	<bean id="openIDFilter" class="org.jrecruiter.web.security.RegistrationAwareOpenIDAuthenticationFilter">
	  <property name="authenticationManager" ref="authenticationManager"/>
	  <property name="consumer" ref="attributeAwareOpenIDConsumer"/>
	  <property name="authenticationSuccessHandler"        ref="openIDFilterSuccess"/>
	  <property name="authenticationFailureHandler"        ref="openIDFilterFailure"/>
	  <property name="registrationTargetUrlRequestHandler" ref="openIDFilterRedirectToRegistration"/>
	</bean>

    <bean id="openIDFilterRedirectToRegistration" class="org.jrecruiter.web.security.RegistrationTargetUrlRequestHandler">
      <property name="defaultTargetUrl" value="/registration/signup.html"/>
    </bean>
    <bean id="openIDFilterSuccess" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
      <property name="defaultTargetUrl" value="/admin/index.html"/>
    </bean>
    <bean id="openIDFilterFailure" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
      <property name="defaultFailureUrl" value="/login.html?status=error"/>
    </bean>

<bean id="attributeAwareOpenIDProvider" class="org.jrecruiter.web.security.AttributeAwareOpenIDProvider" scope="prototype">
  <constructor-arg ref="userService"/>
</bean>

<bean id="attributeAwareOpenIDConsumer" class="org.jrecruiter.web.security.AttributeAwareOpenIDConsumer"/>

<!--  -->

  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider user-service-ref='userService' >
       <security:password-encoder ref="passwordEncoder"/>
    </security:authentication-provider>
    <security:authentication-provider ref="attributeAwareOpenIDProvider" />
  </security:authentication-manager>

  <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter ">
    <property name="rolePrefix" value=""/>
  </bean>

  <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    <property name="decisionVoters">
      <list>
          <ref bean="roleVoter" />
          <ref bean="authenticatedVoter" />
      </list>
    </property>
  </bean>
  <bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter">
  </bean>

  <bean id="securityEventListener" class="org.jrecruiter.spring.SecurityEventListener">
    <property name="userService" ref="userService"/>
  </bean>
  
</beans>