<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="initVars()" applicationComplete="applicationCompleteHandler(event)" cornerRadius="10" layout="vertical" verticalAlign="top" xmlns:ns1="*">

    <mx:Style source="css/style.css"/>
    <mx:Style>
    </mx:Style>


    <mx:Script>
    <![CDATA[

    import mx.controls.Alert;
    import mx.messaging.channels.AMFChannel;
    import mx.messaging.ChannelSet;
    import mx.rpc.events.ResultEvent;

    private var channelSet:ChannelSet;

    private function configResultHandler(event:ResultEvent):void
    {

    }

     [Bindable]
     public var amfBrokerUrl:String;

     // Assign values to new properties.
     private function initVars():void {
        amfBrokerUrl = Application.application.parameters.amfBrokerUrl;
     }

    ]]>
    </mx:Script>


    <mx:Script>
        <![CDATA[
            import com.google.maps.overlays.Marker;
            import mx.binding.utils.BindingUtils;
            import mx.core.UIComponent;
            import mx.managers.PopUpManager;
            import mx.events.CloseEvent;
            import mx.controls.Alert;
            import mx.rpc.events.ResultEvent;

            import mx.controls.Label;
            import mx.containers.TitleWindow;

            private function applicationCompleteHandler(event:Event):void {

                channelSet = new ChannelSet();
                var channel:AMFChannel = new AMFChannel("my-amf", amfBrokerUrl);
                channelSet.addChannel(channel);
                ro.channelSet = channelSet;
                ro.getJobSummaries();
                jobsPanel.visible=true;

            }

            var aboutWindow:TitleWindow;

            private function showAbout():void {

                var popUp:about;

                aboutWindow = new TitleWindow();

                aboutWindow.setStyle("showEffect", fade);
                aboutWindow.setStyle("hideEffect", fade);
                aboutWindow.title = "About jRecruiter";
                aboutWindow.showCloseButton = true;
                aboutWindow.addEventListener(CloseEvent.CLOSE, titleWindow_close);
                aboutWindow.visible = true;
                aboutWindow.addChild(new about());
                PopUpManager.addPopUp(aboutWindow, this, true);
                PopUpManager.centerPopUp(aboutWindow);
            }

            private function titleWindow_close(evt:CloseEvent):void {
                PopUpManager.removePopUp(aboutWindow);
            }

            public function handleJobDetail(event:ResultEvent):void {

                jobId.text           = new String(event.result.id);
                jobDate.text         = dateFormatter.format(event.result.updateDate);
                jobTitle.text        = new String(event.result.jobTitle);
                jobBusinessName.text = new String(event.result.businessName);

                jobDescription.text  = new String(event.result.description);
                jobRestrictions.text  = new String(event.result.jobRestrictions);

                if (event.result.usesMap) {
                    this.map.setCenter(new LatLng(event.result.latitude, event.result.longitude), event.result.zoomLevel, MapType.NORMAL_MAP_TYPE);
                    var latlng:LatLng = new LatLng(event.result.latitude, event.result.longitude);
                    var marker:Marker= new Marker(latlng);
                    map.addOverlay(marker);
                 } else {

                 }
            }

           private function formatDate(item:Object, column:DataGridColumn):String {
                return dateFormatter.format(item.updateDate);
            }
        ]]>
    </mx:Script>
    <mx:ProgressBar id="progressBar" source="{jobsGrid}" visible="false"/>
    <mx:Fade id="fade" duration="500"/>
    <mx:DateFormatter id="dateFormatter" formatString="YYYY/MM/DD"/>

    <mx:RemoteObject id="ro" destination="flexService" >
        <mx:method name="getJob" result="handleJobDetail(event)" makeObjectsBindable="true"/>
    </mx:RemoteObject>

    <mx:HBox width="100%" styleName="header" cornerRadius="15" paddingTop="0" height="77" verticalAlign="middle">
        <mx:Image source="images/musa_header.jpg" scaleContent="true" id="headerImage" autoLoad="true"/>
        <mx:Label width="100%" height="50" text="jRecruiter FX beta" styleName="header" fontSize="28" textAlign="center"/>
    </mx:HBox>
    <mx:HBox width="100%" styleName="header" cornerRadius="15" paddingTop="0" horizontalAlign="left">
        <mx:Button label="Reload Jobs" click="ro.getJobSummaries()"/>
        <mx:Button label="Aboutâ€¦" click="showAbout()"/>
    </mx:HBox>

    <mx:Panel id="jobsPanel" width="100%" height="40%" layout="vertical" title="Jobs" showEffect="{fade}" hideEffect="{fade}" visible="true" cornerRadius="10">
        <mx:DataGrid id="jobsGrid" dataProvider="{ro.getJobSummaries.lastResult}" width="100%" height="224" change="ro.getJob(jobsGrid.selectedItem.id);">
            <mx:columns>
                <mx:DataGridColumn dataField="jobTitle"    headerText="Job Title" />
                <mx:DataGridColumn dataField="businessName" headerText="Company"/>
                <mx:DataGridColumn dataField="updateDate"  headerText="Date" labelFunction="formatDate"/>
                <mx:DataGridColumn dataField="usesMap"     headerText="On Map?"/>
            </mx:columns>
        </mx:DataGrid>
    </mx:Panel>

        <mx:HBox width="100%" height="40%">
            <mx:Panel id="jobDetailContainer" width="50%" cornerRadius="10" height="100%" title="Job Details">
                <mx:Grid id="jobDetailGrid" visible="true" includeInLayout="true">
                    <mx:GridRow width="100%" height="100%">
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label x="10" y="15" text="Job Id"/>
                        </mx:GridItem>
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label id="jobId" x="10" y="15" text=""/>
                        </mx:GridItem>
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label x="10" y="15" text="Date"/>
                        </mx:GridItem>
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label id="jobDate" x="10" y="15" text=""/>
                        </mx:GridItem>
                    </mx:GridRow>
                    <mx:GridRow width="100%" height="100%">
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label x="10" y="15" text="Job Title"/>
                        </mx:GridItem>
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label id="jobTitle" x="10" y="15" text=""/>
                        </mx:GridItem>
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label x="10" y="15" text="Business Name"/>
                        </mx:GridItem>
                        <mx:GridItem width="100%" height="100%">
                             <mx:Label id="jobBusinessName" x="10" y="15" text=""/>
                        </mx:GridItem>
                    </mx:GridRow>
                </mx:Grid>
                <mx:TextArea id="jobDescription"  text="" width="100%" height="100" editable="false"/>
                <mx:TextArea id="jobRestrictions" text="" width="100%" height="100" editable="false"/>
            </mx:Panel>
            <maps:Map xmlns:maps="com.google.maps.*" id="map" mapevent_mapready="onMapReady(event)"
              width="50%" height="100%" key="ABQIAAAAaRkHCsiKIvvB_UEon-SKORQ7EYV2ourIdp48QYZszNEA7gcaFhQRuKqKuYEC9ss4BL5bATDTf3IeLg"/>
            <mx:Script>
                <![CDATA[
                    import com.google.maps.services.GeocodingEvent;
                    import com.google.maps.services.ClientGeocoder;
                    import com.google.maps.controls.MapTypeControl;
                    import com.google.maps.controls.PositionControl;
                    import com.google.maps.controls.ZoomControl;

                    import com.google.maps.LatLng;
                    import com.google.maps.Map;
                    import com.google.maps.MapEvent;
                    import com.google.maps.MapType;

                private function onMapReady(event:Event):void {

                  var geocoder:ClientGeocoder = new ClientGeocoder();

                  geocoder.addEventListener(GeocodingEvent.GEOCODING_SUCCESS, function(event:GeocodingEvent):void {
                        var placemarks:Array = event.response.placemarks;
                        if (placemarks.length > 0) {

                           map.addControl(new ZoomControl());
                           map.addControl(new PositionControl());
                           map.addControl(new MapTypeControl());
                           map.setCenter(placemarks[0].point);
                           map.setZoom(10);
                           var marker:Marker = new Marker(placemarks[0].point);
                           map.addOverlay(marker);
                        }
                      });

                  geocoder.addEventListener(GeocodingEvent.GEOCODING_FAILURE,
                          function(event:GeocodingEvent):void {
                      Alert("Geocoding failed.");
                       });

                    geocoder.geocode("Atlanta, GA");

                }
                ]]>
            </mx:Script>
        </mx:HBox>

</mx:Application>
